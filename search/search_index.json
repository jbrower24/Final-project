{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to My Site My name is Josh Brower and I'm in my last semester at the University of Minnesota. I am studying Technical Writing and Communication and my sub-plan is information design and technology. This site was created for my class: WRIT 4662W - Writing with Digital Technology. This site was compiled using MkDocs and contains all of the work I have done this semester. This site serves as a portfolio to show all of my work I have done as well as what I have learned. What's on the site On my site you will see work from various projects we have done this semester. Below is a list of the different projects and a short description. My Digital Learning Narrative - An update to show how my digital literacy has changed and the skills I have gained through our class. Html Sites - This page will show all of the different sites I have worked on and built using HTML and CSS. Client Project - We worked together as a class to create a website for the Minnesota Austin-Healey Club. On this page you will find what the final product of the site, as well as a breakdown of my contribution, and our work process. Dita Project - This page will show off the project I created using Dita and XML, as well as a little information about each.","title":"home"},{"location":"#welcome-to-my-site","text":"My name is Josh Brower and I'm in my last semester at the University of Minnesota. I am studying Technical Writing and Communication and my sub-plan is information design and technology. This site was created for my class: WRIT 4662W - Writing with Digital Technology. This site was compiled using MkDocs and contains all of the work I have done this semester. This site serves as a portfolio to show all of my work I have done as well as what I have learned.","title":"Welcome to My Site"},{"location":"#whats-on-the-site","text":"On my site you will see work from various projects we have done this semester. Below is a list of the different projects and a short description. My Digital Learning Narrative - An update to show how my digital literacy has changed and the skills I have gained through our class. Html Sites - This page will show all of the different sites I have worked on and built using HTML and CSS. Client Project - We worked together as a class to create a website for the Minnesota Austin-Healey Club. On this page you will find what the final product of the site, as well as a breakdown of my contribution, and our work process. Dita Project - This page will show off the project I created using Dita and XML, as well as a little information about each.","title":"What's on the site"},{"location":"client-project/","text":"Client Project At about the midpoint of the semester we worked together, as a class, to resign a website for the Minnesota Austin-Healey Club. After looking at their Current Site current website, it was clear that they needed a lot of changes to make it more user friendly and better visually. We worked together in groups to design the wireframe and then we used Wordpress to create the actual site. Wire-framing There are many ways to create a wireframe with many different tools. Our group choose to do one fo the most simple ways and used Google Slides. This was simple because it allowed us to easily piece things together but it also was the easiest way for a group of six to work together. If you look at our Wireframe you can see what I mean by simple, it is most made up of text and shapes. This was to focus on the layout of the site and not worry about the design. This was an import part of our process and allowed us to lay out the site we wanted instead of just jumping right in to creating it. Wordpress As a class we had to work together to decide on a web-hosting service for the site. Since we were creating the site, but not managing the site we needed to figure out what would be best for achieve our goals but also easiest for someone, not from our class, to manage. We settled on Wordpress.com. This was my first time working with Wordpress and found it was very easy to learn the basics and get a hang of. While it was easy to learn it also came with a lot of limitations. It is not the best for collaboration, only one person is able to edit a page at a time. Their are also a few things the creator of is only able to do, so since we were all working on different parts we had to have the site manager help us individually many times. I worked on a page all by myself but most of the pages were worked on by groups of two so the difficulty of collaborating was a big issue for them. Final Product Four this project I was in charge of working a creating the gallery. Their original gallery used a third-party site that looked poorly and was very difficult to navigate. I wanted to make sure I created a gallery that not only looked better but was much easier to use, so the club could show their large number of photos. Since they had so many photos I wanted the page to work as a gallery and a slideshow so they could easily look for specific photos or view them all as a slide show. Their originally one only worked as a slide show and didn't allow people to find specific photos easily. Below you will find our finished Wordpress site and it will open to the gallery page I initially created. We all had individual parts of the site to work on but worked on some parts as a class. One of those was the layout and design. The layout was mostly decided through the wire framing but some of it needed to be adapted as the site progressed. As for the design we worked together to figure out the color scheme, fonts, images, videos, and many other things as a class. Everyone added their own input on how they see it looking. Since I worked on the gallery, I was also in charge of helping other groups find images that would work with their page. In the end I was very pleased with the site and it seemed like the club was too, when we presented it to two of its members who requested the site. It is definitely a major upgrade from their original site. I am excited to see the site up and running after all of the work we put into it. New Minnesota Austin-Healey Website","title":"Client Project"},{"location":"client-project/#client-project","text":"At about the midpoint of the semester we worked together, as a class, to resign a website for the Minnesota Austin-Healey Club. After looking at their Current Site current website, it was clear that they needed a lot of changes to make it more user friendly and better visually. We worked together in groups to design the wireframe and then we used Wordpress to create the actual site.","title":"Client Project"},{"location":"client-project/#wire-framing","text":"There are many ways to create a wireframe with many different tools. Our group choose to do one fo the most simple ways and used Google Slides. This was simple because it allowed us to easily piece things together but it also was the easiest way for a group of six to work together. If you look at our Wireframe you can see what I mean by simple, it is most made up of text and shapes. This was to focus on the layout of the site and not worry about the design. This was an import part of our process and allowed us to lay out the site we wanted instead of just jumping right in to creating it.","title":"Wire-framing"},{"location":"client-project/#wordpress","text":"As a class we had to work together to decide on a web-hosting service for the site. Since we were creating the site, but not managing the site we needed to figure out what would be best for achieve our goals but also easiest for someone, not from our class, to manage. We settled on Wordpress.com. This was my first time working with Wordpress and found it was very easy to learn the basics and get a hang of. While it was easy to learn it also came with a lot of limitations. It is not the best for collaboration, only one person is able to edit a page at a time. Their are also a few things the creator of is only able to do, so since we were all working on different parts we had to have the site manager help us individually many times. I worked on a page all by myself but most of the pages were worked on by groups of two so the difficulty of collaborating was a big issue for them.","title":"Wordpress"},{"location":"client-project/#final-product","text":"Four this project I was in charge of working a creating the gallery. Their original gallery used a third-party site that looked poorly and was very difficult to navigate. I wanted to make sure I created a gallery that not only looked better but was much easier to use, so the club could show their large number of photos. Since they had so many photos I wanted the page to work as a gallery and a slideshow so they could easily look for specific photos or view them all as a slide show. Their originally one only worked as a slide show and didn't allow people to find specific photos easily. Below you will find our finished Wordpress site and it will open to the gallery page I initially created. We all had individual parts of the site to work on but worked on some parts as a class. One of those was the layout and design. The layout was mostly decided through the wire framing but some of it needed to be adapted as the site progressed. As for the design we worked together to figure out the color scheme, fonts, images, videos, and many other things as a class. Everyone added their own input on how they see it looking. Since I worked on the gallery, I was also in charge of helping other groups find images that would work with their page. In the end I was very pleased with the site and it seemed like the club was too, when we presented it to two of its members who requested the site. It is definitely a major upgrade from their original site. I am excited to see the site up and running after all of the work we put into it. New Minnesota Austin-Healey Website","title":"Final Product"},{"location":"dita/","text":"XML and Dita Working with oxygen editor developed a project that consisted of: A concept topic, task topics, and a reference topic. The project was farely open-ended with what our topic could be so I chose how to fix a Keurig coffee maker. I chose something that would be easy to write about because the morning before one of our classes I spent awhile fixing my Keurig. My topic had enough different aspects of it that allowed me to complete all of the requirements and my final product was presented as a plain HTML site and as a PDF. Both of which can be found below. I found that the PDF document was much easier to create a working transformation and looks much better. Unfortunately my topic isn't something that would generally be found as a PDF, it is something that people would quickly google and click on the first webpage. PDF version of project HTML version of project What is Dita and XML? Dita is an acronym that stands for 'The Darwin Information Typing Architecture.' It is a specification that defines a set of document types for authoring and organizing topic-orientated information. It was originally developed by IBM to more effectively reuse content in product documentation. Dita is XML based. XML stands for 'Extensible Markup Language' and is a markup language that defines a set of rules for encoding documents in a format that can be read by both humans and computers. My Introduction to DITA For me, this was the first time I had ever worked with something like Oxygen XML. It is pretty easy to pick up if you have experience with other tools for technical documentation. It seems like something that will be very useful once I enter the post-college life because it allows you to do outlines for technical documentation as well as many other tasks. The main issue with it was that it costs a lot of money to use each month, but luckily we were able to do our projects using a 30-day free trial. My main issues with Oxygen and XML came from my computer. Apparently running Oxygen requires a lot of your disk space so I at times struggled to be able to run the program. This mostly came when I had other programs open, such as zoom during our class. This made me struggle a little bit since I wasn't always able to follow along in class but was able to quickly pick it up after. I also learned there are programs like Codex which are free, allow you to do most of the same things are oxygen, and run better on computers like mine.","title":"Dita"},{"location":"dita/#xml-and-dita","text":"Working with oxygen editor developed a project that consisted of: A concept topic, task topics, and a reference topic. The project was farely open-ended with what our topic could be so I chose how to fix a Keurig coffee maker. I chose something that would be easy to write about because the morning before one of our classes I spent awhile fixing my Keurig. My topic had enough different aspects of it that allowed me to complete all of the requirements and my final product was presented as a plain HTML site and as a PDF. Both of which can be found below. I found that the PDF document was much easier to create a working transformation and looks much better. Unfortunately my topic isn't something that would generally be found as a PDF, it is something that people would quickly google and click on the first webpage. PDF version of project HTML version of project","title":"XML and Dita"},{"location":"dita/#what-is-dita-and-xml","text":"Dita is an acronym that stands for 'The Darwin Information Typing Architecture.' It is a specification that defines a set of document types for authoring and organizing topic-orientated information. It was originally developed by IBM to more effectively reuse content in product documentation. Dita is XML based. XML stands for 'Extensible Markup Language' and is a markup language that defines a set of rules for encoding documents in a format that can be read by both humans and computers.","title":"What is Dita and XML?"},{"location":"dita/#my-introduction-to-dita","text":"For me, this was the first time I had ever worked with something like Oxygen XML. It is pretty easy to pick up if you have experience with other tools for technical documentation. It seems like something that will be very useful once I enter the post-college life because it allows you to do outlines for technical documentation as well as many other tasks. The main issue with it was that it costs a lot of money to use each month, but luckily we were able to do our projects using a 30-day free trial. My main issues with Oxygen and XML came from my computer. Apparently running Oxygen requires a lot of your disk space so I at times struggled to be able to run the program. This mostly came when I had other programs open, such as zoom during our class. This made me struggle a little bit since I wasn't always able to follow along in class but was able to quickly pick it up after. I also learned there are programs like Codex which are free, allow you to do most of the same things are oxygen, and run better on computers like mine.","title":"My Introduction to DITA"},{"location":"html/","text":"Working with HTML The first major project we worked on was building a static site using HTML. I have built sites in the past, using HTML but this class is the first time I used HTML to the extent that I did. We built simple sites with a little bit of CSS for design and progressively learned more throughout the semester. Working on the sites also introduced me to Git and Github for the first time. Github is a site hosting provider for software development and version control. It was very easy to learn and became a very useful resource for hosing a site that allowed me to show off my work. Below you will find the sites I worked on are hosted using Github and the site you are currently on is too. My First Site My first site was just a very basic introduction to HTML and CSS, for this semester. We just needed to create a site that a few HTML elements and some working CSS that is linked to the page. As you can see my site is very simple and I used it as a few to better understand HTML and CSS. I played around with it and just tried to see what I was capable of doing. As you can see, from the other sites below, I started to get better at setting up a webpage and the design of it. Static Site Working on a Template The next project was actually our introduction to Github. We needed to be able to upload our work to Github as a repository and then host the site using Github pages. I started by uploading my original site that I created but also uploaded another site that worked on after the first project. The site below is one that started as a template from HTML5 . If you click on the link it will take you to the page I downloaded it from and you can see what it originally looked like. My version made a lot of changes that completely changed it the site. With this I again just wanted to play around with the HTML and CSS files and see what I could do. I focused on learning new things instead of creating a site to serve a purpose. You will see that the site doesn't make a whole lot of sense and is just random things thrown together. If you click around you will notice the things I added. HTML5 Site Outside of class Since I actually liked developing websites and working with HTML and CSS I wanted to try and push myself farther. I decided to do my capstone for this class and build a website. The site I am finishing up building is for one of the laboratories in the Department of Surgery. The bellow is an a template I created for the site before I added all of the content. I created this to figure out how I wanted the site to look before adding all the information and by having the template it would be easier to create the other nine pages. The final site will look slightly different since I still haven't decided on the fonts or added images, so that should change the spacing a little bit. I think by comparing this site to some of the stuff I created earlier in the semester it shows just how much I have learned and how much more familiar I have become with different programs and languages we used in class. Capstone Template I made","title":"HTML work"},{"location":"html/#working-with-html","text":"The first major project we worked on was building a static site using HTML. I have built sites in the past, using HTML but this class is the first time I used HTML to the extent that I did. We built simple sites with a little bit of CSS for design and progressively learned more throughout the semester. Working on the sites also introduced me to Git and Github for the first time. Github is a site hosting provider for software development and version control. It was very easy to learn and became a very useful resource for hosing a site that allowed me to show off my work. Below you will find the sites I worked on are hosted using Github and the site you are currently on is too.","title":"Working with HTML"},{"location":"html/#my-first-site","text":"My first site was just a very basic introduction to HTML and CSS, for this semester. We just needed to create a site that a few HTML elements and some working CSS that is linked to the page. As you can see my site is very simple and I used it as a few to better understand HTML and CSS. I played around with it and just tried to see what I was capable of doing. As you can see, from the other sites below, I started to get better at setting up a webpage and the design of it. Static Site","title":"My First Site"},{"location":"html/#working-on-a-template","text":"The next project was actually our introduction to Github. We needed to be able to upload our work to Github as a repository and then host the site using Github pages. I started by uploading my original site that I created but also uploaded another site that worked on after the first project. The site below is one that started as a template from HTML5 . If you click on the link it will take you to the page I downloaded it from and you can see what it originally looked like. My version made a lot of changes that completely changed it the site. With this I again just wanted to play around with the HTML and CSS files and see what I could do. I focused on learning new things instead of creating a site to serve a purpose. You will see that the site doesn't make a whole lot of sense and is just random things thrown together. If you click around you will notice the things I added. HTML5 Site","title":"Working on a Template"},{"location":"html/#outside-of-class","text":"Since I actually liked developing websites and working with HTML and CSS I wanted to try and push myself farther. I decided to do my capstone for this class and build a website. The site I am finishing up building is for one of the laboratories in the Department of Surgery. The bellow is an a template I created for the site before I added all of the content. I created this to figure out how I wanted the site to look before adding all the information and by having the template it would be easier to create the other nine pages. The final site will look slightly different since I still haven't decided on the fonts or added images, so that should change the spacing a little bit. I think by comparing this site to some of the stuff I created earlier in the semester it shows just how much I have learned and how much more familiar I have become with different programs and languages we used in class. Capstone Template I made","title":"Outside of class"},{"location":"mkdocs/","text":"MkDocs This was our finally project and definitely the one that I struggle with most at first. This project required me to use programs and tools that I never had used before, and at first it seemed very different from the rest of the stuff we learn. For this project I used the terminal application for the first time, had to download python for the first time and wrote webpages completely in Markdown (.md) for the first time. My biggest struggle was with getting mkdocs to work for the first time. I had no prior experience with terminal before so setting up my folder was a struggle. I wasn't familiar with any of the commands we needed, such as; cd(change directory), serve(run the live preview of the site), and mkdocs(how to access mkdocs + build to build the folder). I struggled with understanding how the site operates and how to make changes. This was my first time working with a .yml file so it was a little difficult to understand the structure of it and what to write so the site would work correctly. While it was confusing at first, once I got the hang of the programs it was fascinating to see how it worked. MkDocs develops a live preview of the site your building so you can see all the changes you are making without having to wait or reload pages. MkDocs also comes with many different themes you can use so it is much easier to pick a theme when the site is auto-reloading as you save the files. Since it has its own themes that means that you don't need to work with any .css files, it does it all for you, so that makes mkdocs one of the easiest ways to build a site and display content. For this project I don't have any sort of deliverables that I can link because what you reading this on is the project. The site was built using mkdocs and atom for writing the pages. I then uploaded it to Github where I was able to host it on Github pages, and you are now looking at the finished version. Since there is nothing for me to link on this page, below is some of the resources I found most useful. Resources I used The best resource was obviously class time and seeing the demonstrations on how to set things up. It was also very useful to work through issues as small groups and help each other. Besides class and the class resources below are what I used outside of class to better understand mkdocs and complete this project. Mkdocs Website - Their own website is built using mkdocs. On the site you'll find a lot of information that helps you learn how to run the program or smaller stuff like how to write the documents. It also has user guides for many different things you do with mkdocs. Video walkthrough on how to document your project - This video I found very helpful but also very interesting. It is a presentaion that the creator of mkdocs is giving, where he lays out how it works and helps you set it up, which is very helpful. It is also fascinating because he talks about how and why he created mkdocs and what its focus is. Mkdocs themes - This is a page, hosted on Github, that lists many different themes that you can use on with mkdocs. You need mkdocs-bootstraps downloaded and at the top there is a break ddown of how to add that threw terminal. The theme I picked is called \"Superhero\" and there are about 20 more good choices. Changing the theme is very easy in the .yml file so it was nice being able to easily pick what looked best. Markdown Cheat sheet - This is very useful site that I kept returning to. It lays out a lot of different syntax references in the Markdown language. Since I didn't have a lot of experience with Markdown it was nice to have this handy for if I struggled.","title":"MkDocs"},{"location":"mkdocs/#mkdocs","text":"This was our finally project and definitely the one that I struggle with most at first. This project required me to use programs and tools that I never had used before, and at first it seemed very different from the rest of the stuff we learn. For this project I used the terminal application for the first time, had to download python for the first time and wrote webpages completely in Markdown (.md) for the first time. My biggest struggle was with getting mkdocs to work for the first time. I had no prior experience with terminal before so setting up my folder was a struggle. I wasn't familiar with any of the commands we needed, such as; cd(change directory), serve(run the live preview of the site), and mkdocs(how to access mkdocs + build to build the folder). I struggled with understanding how the site operates and how to make changes. This was my first time working with a .yml file so it was a little difficult to understand the structure of it and what to write so the site would work correctly. While it was confusing at first, once I got the hang of the programs it was fascinating to see how it worked. MkDocs develops a live preview of the site your building so you can see all the changes you are making without having to wait or reload pages. MkDocs also comes with many different themes you can use so it is much easier to pick a theme when the site is auto-reloading as you save the files. Since it has its own themes that means that you don't need to work with any .css files, it does it all for you, so that makes mkdocs one of the easiest ways to build a site and display content. For this project I don't have any sort of deliverables that I can link because what you reading this on is the project. The site was built using mkdocs and atom for writing the pages. I then uploaded it to Github where I was able to host it on Github pages, and you are now looking at the finished version. Since there is nothing for me to link on this page, below is some of the resources I found most useful.","title":"MkDocs"},{"location":"mkdocs/#resources-i-used","text":"The best resource was obviously class time and seeing the demonstrations on how to set things up. It was also very useful to work through issues as small groups and help each other. Besides class and the class resources below are what I used outside of class to better understand mkdocs and complete this project. Mkdocs Website - Their own website is built using mkdocs. On the site you'll find a lot of information that helps you learn how to run the program or smaller stuff like how to write the documents. It also has user guides for many different things you do with mkdocs. Video walkthrough on how to document your project - This video I found very helpful but also very interesting. It is a presentaion that the creator of mkdocs is giving, where he lays out how it works and helps you set it up, which is very helpful. It is also fascinating because he talks about how and why he created mkdocs and what its focus is. Mkdocs themes - This is a page, hosted on Github, that lists many different themes that you can use on with mkdocs. You need mkdocs-bootstraps downloaded and at the top there is a break ddown of how to add that threw terminal. The theme I picked is called \"Superhero\" and there are about 20 more good choices. Changing the theme is very easy in the .yml file so it was nice being able to easily pick what looked best. Markdown Cheat sheet - This is very useful site that I kept returning to. It lays out a lot of different syntax references in the Markdown language. Since I didn't have a lot of experience with Markdown it was nice to have this handy for if I struggled.","title":"Resources I used"},{"location":"narrative/","text":"Reflection and New Digital Literacy This class offered me allowed me work with many different technologies that I have never used. A lot of the tools that we learned in this class should be very helpful in working in technical writing and technology once I graduate. This class forced me to create project using tools that I have never used before. Most of my classes focuses on projects of writing, but this class allowed me to do a lot more then that. I really enjoyed the freedom I had with the projects we did. I was able to create the project by doing my own design and had the freedom to make it look how ever I wanted. This was both enjoyable and refreshing. This class allowed me to realize I enjoy doing stuff like this a whole lot more then writing 10 pages essays or research papers. I liked the freedom and creativity I had working in this class. As my site is hopefully able to demonstrate, I learned a lot of important skills that I think should be very helpful in my work life post college: Below are all the tools I learned, either for the first time, or gained a better understanding of. * Html * CSS * Github * Wordpress.com (and web-hosting services in general) * DITA * XML * MkDocs Aside from those tools that focus on mostly on creating products, this class also helped me to better understand how to work as a team. Our class was small so a lot of the stuff we worked on we worked in small groups to help each other out. It was very nice being able to see other people's process and help each other with any issues. Our client project also was huge in helping me understand how to work as a team with digital technologies. I developed a better understanding of project management. I have not worked with the type of tools and technologies that we did for that project, before. So it was nice to be able to use those instead of having to use them for the first time at work in the outside world. This Next Steps in Digital Literacy As I get closer to the end of my last semester people keep asking me what's next? It's a fair question that I still don't have an answer to. This summer, while I look for jobs, I plan on exploring some online courses related to what we have learned in this class. I believe I have developed a pretty good understanding of HTML and CSS but would like to learn more about what goes into a website such as Javascript and jQuery, among others. I like believe that this class was the biggest step in my digital literacy narrative, up to this point, but it also also just the start. This class helped me to better understand my interests and possible change my future Digital Literacy Narrative will play out.","title":"Narrative and Reflection"},{"location":"narrative/#reflection-and-new-digital-literacy","text":"This class offered me allowed me work with many different technologies that I have never used. A lot of the tools that we learned in this class should be very helpful in working in technical writing and technology once I graduate. This class forced me to create project using tools that I have never used before. Most of my classes focuses on projects of writing, but this class allowed me to do a lot more then that. I really enjoyed the freedom I had with the projects we did. I was able to create the project by doing my own design and had the freedom to make it look how ever I wanted. This was both enjoyable and refreshing. This class allowed me to realize I enjoy doing stuff like this a whole lot more then writing 10 pages essays or research papers. I liked the freedom and creativity I had working in this class. As my site is hopefully able to demonstrate, I learned a lot of important skills that I think should be very helpful in my work life post college: Below are all the tools I learned, either for the first time, or gained a better understanding of. * Html * CSS * Github * Wordpress.com (and web-hosting services in general) * DITA * XML * MkDocs Aside from those tools that focus on mostly on creating products, this class also helped me to better understand how to work as a team. Our class was small so a lot of the stuff we worked on we worked in small groups to help each other out. It was very nice being able to see other people's process and help each other with any issues. Our client project also was huge in helping me understand how to work as a team with digital technologies. I developed a better understanding of project management. I have not worked with the type of tools and technologies that we did for that project, before. So it was nice to be able to use those instead of having to use them for the first time at work in the outside world. This","title":"Reflection and New Digital Literacy"},{"location":"narrative/#next-steps-in-digital-literacy","text":"As I get closer to the end of my last semester people keep asking me what's next? It's a fair question that I still don't have an answer to. This summer, while I look for jobs, I plan on exploring some online courses related to what we have learned in this class. I believe I have developed a pretty good understanding of HTML and CSS but would like to learn more about what goes into a website such as Javascript and jQuery, among others. I like believe that this class was the biggest step in my digital literacy narrative, up to this point, but it also also just the start. This class helped me to better understand my interests and possible change my future Digital Literacy Narrative will play out.","title":"Next Steps in Digital Literacy"}]}